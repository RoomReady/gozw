// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package associationgrpinfo

import "errors"

// <no value>

type AssociationGroupNameReport struct {
	GroupingIdentifier byte

	LengthOfName byte

	Name []byte
}

func (cmd *AssociationGroupNameReport) UnmarshalBinary(payload []byte) error {
	i := 0

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.GroupingIdentifier = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.LengthOfName = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Name = payload[i : i+1]
	i += 1

	return nil
}

func (cmd *AssociationGroupNameReport) MarshalBinary() (payload []byte, err error) {

	payload = append(payload, cmd.GroupingIdentifier)

	payload = append(payload, cmd.LengthOfName)

	if cmd.Name != nil && len(cmd.Name) > 0 {
		payload = append(payload, cmd.Name...)
	}

	return
}
