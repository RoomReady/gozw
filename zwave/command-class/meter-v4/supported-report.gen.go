// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package meterv4

import "errors"

// <no value>

type MeterSupportedReport struct {
	Properties1 struct {
		MeterReset bool

		MeterType byte

		RateType byte
	}

	Properties2 struct {
		ScaleSupported0 byte

		Mst bool
	}

	NumberOfScaleSupportedBytesToFollow byte

	ScaleSupported []byte
}

func (cmd *MeterSupportedReport) UnmarshalBinary(payload []byte) error {
	i := 2

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Properties1.MeterType = (payload[i] & 0x1F)

	cmd.Properties1.RateType = (payload[i] & 0x60) << 5

	if payload[i]&0x80 == 0x80 {
		cmd.Properties1.MeterReset = true
	} else {
		cmd.Properties1.MeterReset = false
	}

	i += 1

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Properties2.ScaleSupported0 = (payload[i] & 0x7F)

	if payload[i]&0x80 == 0x80 {
		cmd.Properties2.Mst = true
	} else {
		cmd.Properties2.Mst = false
	}

	i += 1

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.NumberOfScaleSupportedBytesToFollow = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.ScaleSupported = payload[i : i+2]
	i += 2

	return nil
}
