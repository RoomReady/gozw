// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package sensormultilevelv6

import (
	"encoding/gob"
	"errors"
)

func init() {
	gob.Register(SensorMultilevelSupportedScaleReport{})
}

// <no value>
type SensorMultilevelSupportedScaleReport struct {
	SensorType byte

	Properties1 struct {
		ScaleBitMask byte
	}
}

func (cmd *SensorMultilevelSupportedScaleReport) UnmarshalBinary(data []byte) error {
	// According to the docs, we must copy data if we wish to retain it after returning
	payload := make([]byte, len(data))
	copy(payload, data)
	i := 0

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.SensorType = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Properties1.ScaleBitMask = (payload[i] & 0x0F)

	i += 1

	return nil
}

func (cmd *SensorMultilevelSupportedScaleReport) MarshalBinary() (payload []byte, err error) {

	payload = append(payload, cmd.SensorType)

	{
		var val byte

		val |= (cmd.Properties1.ScaleBitMask) & byte(0x0F)

		payload = append(payload, val)
	}

	return
}
