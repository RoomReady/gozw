// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package firmwareupdatemdv3

import (
	"encoding/binary"
	"errors"
)

// <no value>

type FirmwareMdReport struct {
	ManufacturerId uint16

	Firmware0Id uint16

	Firmware0Checksum uint16

	FirmwareUpgradable byte

	NumberOfFirmwareTargets byte

	MaxFragmentSize uint16
}

func (cmd *FirmwareMdReport) UnmarshalBinary(payload []byte) error {
	i := 2

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.ManufacturerId = binary.BigEndian.Uint16(payload[i : i+2])
	i += 2

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Firmware0Id = binary.BigEndian.Uint16(payload[i : i+2])
	i += 2

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Firmware0Checksum = binary.BigEndian.Uint16(payload[i : i+2])
	i += 2

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.FirmwareUpgradable = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.NumberOfFirmwareTargets = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.MaxFragmentSize = binary.BigEndian.Uint16(payload[i : i+2])
	i += 2

	return nil
}
