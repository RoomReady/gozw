// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package switchmultilevelv3

import "errors"

// <no value>

type SwitchMultilevelSupportedReport struct {
	Properties1 struct {
		PrimarySwitchType byte
	}

	Properties2 struct {
		SecondarySwitchType byte
	}
}

func (cmd *SwitchMultilevelSupportedReport) UnmarshalBinary(payload []byte) error {
	i := 0

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Properties1.PrimarySwitchType = (payload[i] & 0x1F)

	i += 1

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Properties2.SecondarySwitchType = (payload[i] & 0x1F)

	i += 1

	return nil
}

func (cmd *SwitchMultilevelSupportedReport) MarshalBinary() (payload []byte, err error) {

	{
		var val byte

		val |= (cmd.Properties1.PrimarySwitchType) & byte(0x1F)

		payload = append(payload, val)
	}

	{
		var val byte

		val |= (cmd.Properties2.SecondarySwitchType) & byte(0x1F)

		payload = append(payload, val)
	}

	return
}
