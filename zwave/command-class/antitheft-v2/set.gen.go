// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package antitheftv2

import (
	"encoding/binary"
	"errors"
)

// <no value>

type AntitheftSet struct {
	Properties1 struct {
		NumberOfMagicCodeBytes byte

		Enable bool
	}

	MagicCode []byte

	ManufacturerId uint16

	AntiTheftHintNumberBytes byte

	AntiTheftHintByte []byte
}

func (cmd *AntitheftSet) UnmarshalBinary(payload []byte) error {
	i := 2

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Properties1.NumberOfMagicCodeBytes = (payload[i] & 0x7F)

	if payload[i]&0x80 == 0x80 {
		cmd.Properties1.Enable = true
	} else {
		cmd.Properties1.Enable = false
	}

	i += 1

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.MagicCode = payload[i : i+0]
	i += 0

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.ManufacturerId = binary.BigEndian.Uint16(payload[i : i+2])
	i += 2

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.AntiTheftHintNumberBytes = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.AntiTheftHintByte = payload[i : i+3]
	i += 3

	return nil
}
