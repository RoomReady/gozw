// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package scheduleentrylockv3

import "errors"

// <no value>

type ScheduleEntryLockDailyRepeatingSet struct {
	SetAction byte

	UserIdentifier byte

	ScheduleSlotId byte

	WeekDayBitmask byte

	StartHour byte

	StartMinute byte

	DurationHour byte

	DurationMinute byte
}

func (cmd *ScheduleEntryLockDailyRepeatingSet) UnmarshalBinary(payload []byte) error {
	i := 0

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.SetAction = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.UserIdentifier = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.ScheduleSlotId = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.WeekDayBitmask = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.StartHour = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.StartMinute = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.DurationHour = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.DurationMinute = payload[i]
	i++

	return nil
}

func (cmd *ScheduleEntryLockDailyRepeatingSet) MarshalBinary() (payload []byte, err error) {

	payload = append(payload, cmd.SetAction)

	payload = append(payload, cmd.UserIdentifier)

	payload = append(payload, cmd.ScheduleSlotId)

	payload = append(payload, cmd.WeekDayBitmask)

	payload = append(payload, cmd.StartHour)

	payload = append(payload, cmd.StartMinute)

	payload = append(payload, cmd.DurationHour)

	payload = append(payload, cmd.DurationMinute)

	return
}
