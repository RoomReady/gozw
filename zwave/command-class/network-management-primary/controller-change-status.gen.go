// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package networkmanagementprimary

import "errors"

// <no value>

type ControllerChangeStatus struct {
	SeqNo byte

	Status byte

	NewNodeId byte

	NodeInfoLength byte

	Properties1 struct {
		Capability byte

		Listening bool
	}

	Properties2 struct {
		Security byte

		Opt bool
	}

	BasicDeviceClass byte

	GenericDeviceClass byte

	SpecificDeviceClass byte

	CommandClass []byte
}

func (cmd *ControllerChangeStatus) UnmarshalBinary(payload []byte) error {
	i := 2

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.SeqNo = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Status = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.NewNodeId = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.NodeInfoLength = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Properties1.Capability = (payload[i] & 0x7F)

	if payload[i]&0x80 == 0x80 {
		cmd.Properties1.Listening = true
	} else {
		cmd.Properties1.Listening = false
	}

	i += 1

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Properties2.Security = (payload[i] & 0x7F)

	if payload[i]&0x80 == 0x80 {
		cmd.Properties2.Opt = true
	} else {
		cmd.Properties2.Opt = false
	}

	i += 1

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.BasicDeviceClass = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.GenericDeviceClass = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.SpecificDeviceClass = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	val.CommandClass = payload[i:]

	return nil
}
