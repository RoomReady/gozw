// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package colorcontrolv2

import "errors"

// <no value>

type StartCapabilityLevelChange struct {
	Properties1 struct {
		Res1 byte

		IgnoreStartState bool

		Updown bool

		Res2 bool
	}

	CapabilityId byte

	StartState byte
}

func (cmd *StartCapabilityLevelChange) UnmarshalBinary(payload []byte) error {
	i := 2

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Properties1.Res1 = (payload[i] & 0x1F)

	if payload[i]&0x20 == 0x20 {
		cmd.Properties1.IgnoreStartState = true
	} else {
		cmd.Properties1.IgnoreStartState = false
	}

	if payload[i]&0x40 == 0x40 {
		cmd.Properties1.Updown = true
	} else {
		cmd.Properties1.Updown = false
	}

	if payload[i]&0x80 == 0x80 {
		cmd.Properties1.Res2 = true
	} else {
		cmd.Properties1.Res2 = false
	}

	i += 1

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.CapabilityId = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.StartState = payload[i]
	i++

	return nil
}
