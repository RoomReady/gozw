// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package chimneyfan

// <no value>

type ChimneyFanStatusReport struct {
	State byte

	Speed byte

	NotUsed byte

	Service bool

	ExternalAlarm bool

	SensorError bool

	AlarmTemperatureExceeded bool

	SpeedChangeEnable bool

	StartTemperatureExceeded bool

	Size byte

	Scale byte

	Precision byte

	Value []byte
}

func ParseChimneyFanStatusReport(payload []byte) ChimneyFanStatusReport {
	val := ChimneyFanStatusReport{}

	i := 2

	val.State = payload[i]
	i++

	val.Speed = payload[i]
	i++

	val.NotUsed = (payload[i] & 0x30) << 4

	if payload[i]&0x01 == 0x01 {
		val.Service = true
	} else {
		val.Service = false
	}

	if payload[i]&0x02 == 0x02 {
		val.ExternalAlarm = true
	} else {
		val.ExternalAlarm = false
	}

	if payload[i]&0x04 == 0x04 {
		val.SensorError = true
	} else {
		val.SensorError = false
	}

	if payload[i]&0x08 == 0x08 {
		val.AlarmTemperatureExceeded = true
	} else {
		val.AlarmTemperatureExceeded = false
	}

	if payload[i]&0x40 == 0x40 {
		val.SpeedChangeEnable = true
	} else {
		val.SpeedChangeEnable = false
	}

	if payload[i]&0x80 == 0x80 {
		val.StartTemperatureExceeded = true
	} else {
		val.StartTemperatureExceeded = false
	}

	i += 1

	val.Size = (payload[i] & 0x07)

	val.Scale = (payload[i] & 0x18) << 3

	val.Precision = (payload[i] & 0xE0) << 5

	i += 1

	val.Value = payload[i : i+3]
	i += 3

	return val
}
