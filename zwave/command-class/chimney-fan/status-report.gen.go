// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package chimneyfan

import "errors"

// <no value>

type ChimneyFanStatusReport struct {
	State byte

	Speed byte

	AlarmStatus struct {
		NotUsed byte

		Service bool

		ExternalAlarm bool

		SensorError bool

		AlarmTemperatureExceeded bool

		SpeedChangeEnable bool

		StartTemperatureExceeded bool
	}

	Properties1 struct {
		Size byte

		Scale byte

		Precision byte
	}

	Value []byte
}

func (cmd *ChimneyFanStatusReport) UnmarshalBinary(payload []byte) error {
	i := 2

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.State = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Speed = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.AlarmStatus.NotUsed = (payload[i] & 0x30) << 4

	if payload[i]&0x01 == 0x01 {
		cmd.AlarmStatus.Service = true
	} else {
		cmd.AlarmStatus.Service = false
	}

	if payload[i]&0x02 == 0x02 {
		cmd.AlarmStatus.ExternalAlarm = true
	} else {
		cmd.AlarmStatus.ExternalAlarm = false
	}

	if payload[i]&0x04 == 0x04 {
		cmd.AlarmStatus.SensorError = true
	} else {
		cmd.AlarmStatus.SensorError = false
	}

	if payload[i]&0x08 == 0x08 {
		cmd.AlarmStatus.AlarmTemperatureExceeded = true
	} else {
		cmd.AlarmStatus.AlarmTemperatureExceeded = false
	}

	if payload[i]&0x40 == 0x40 {
		cmd.AlarmStatus.SpeedChangeEnable = true
	} else {
		cmd.AlarmStatus.SpeedChangeEnable = false
	}

	if payload[i]&0x80 == 0x80 {
		cmd.AlarmStatus.StartTemperatureExceeded = true
	} else {
		cmd.AlarmStatus.StartTemperatureExceeded = false
	}

	i += 1

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Properties1.Size = (payload[i] & 0x07)

	cmd.Properties1.Scale = (payload[i] & 0x18) << 3

	cmd.Properties1.Precision = (payload[i] & 0xE0) << 5

	i += 1

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Value = payload[i : i+3]
	i += 3

	return nil
}
