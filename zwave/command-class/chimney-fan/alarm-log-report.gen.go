// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package chimneyfan

// <no value>

type ChimneyFanAlarmLogReport struct {
	AlarmEvent1 struct {
		ExternalAlarm1 bool

		SensorError1 bool

		AlarmTemperatureExceeded1 bool

		AlarmStillActive1 bool
	}

	AlarmEvent2 struct {
		ExternalAlarm2 bool

		SensorError2 bool

		AlarmTemperatureExceeded2 bool

		AlarmStillActive2 bool
	}

	AlarmEvent3 struct {
		ExternalAlarm3 bool

		SensorError3 bool

		AlarmTemperatureExceeded3 bool

		AlarmStillActive3 bool
	}

	AlarmEvent4 struct {
		ExternalAlarm4 bool

		SensorError4 bool

		AlarmTemperatureExceeded4 bool

		AlarmStillActive4 bool
	}

	AlarmEvent5 struct {
		ExternalAlarm5 bool

		SensorError5 bool

		AlarmTemperatureExceeded5 bool

		AlarmStillActive5 bool
	}
}

func ParseChimneyFanAlarmLogReport(payload []byte) ChimneyFanAlarmLogReport {
	val := ChimneyFanAlarmLogReport{}

	i := 2

	if payload[i]&0x02 == 0x02 {
		val.AlarmEvent1.ExternalAlarm1 = true
	} else {
		val.AlarmEvent1.ExternalAlarm1 = false
	}

	if payload[i]&0x04 == 0x04 {
		val.AlarmEvent1.SensorError1 = true
	} else {
		val.AlarmEvent1.SensorError1 = false
	}

	if payload[i]&0x08 == 0x08 {
		val.AlarmEvent1.AlarmTemperatureExceeded1 = true
	} else {
		val.AlarmEvent1.AlarmTemperatureExceeded1 = false
	}

	if payload[i]&0x80 == 0x80 {
		val.AlarmEvent1.AlarmStillActive1 = true
	} else {
		val.AlarmEvent1.AlarmStillActive1 = false
	}

	i += 1

	if payload[i]&0x02 == 0x02 {
		val.AlarmEvent2.ExternalAlarm2 = true
	} else {
		val.AlarmEvent2.ExternalAlarm2 = false
	}

	if payload[i]&0x04 == 0x04 {
		val.AlarmEvent2.SensorError2 = true
	} else {
		val.AlarmEvent2.SensorError2 = false
	}

	if payload[i]&0x08 == 0x08 {
		val.AlarmEvent2.AlarmTemperatureExceeded2 = true
	} else {
		val.AlarmEvent2.AlarmTemperatureExceeded2 = false
	}

	if payload[i]&0x80 == 0x80 {
		val.AlarmEvent2.AlarmStillActive2 = true
	} else {
		val.AlarmEvent2.AlarmStillActive2 = false
	}

	i += 1

	if payload[i]&0x02 == 0x02 {
		val.AlarmEvent3.ExternalAlarm3 = true
	} else {
		val.AlarmEvent3.ExternalAlarm3 = false
	}

	if payload[i]&0x04 == 0x04 {
		val.AlarmEvent3.SensorError3 = true
	} else {
		val.AlarmEvent3.SensorError3 = false
	}

	if payload[i]&0x08 == 0x08 {
		val.AlarmEvent3.AlarmTemperatureExceeded3 = true
	} else {
		val.AlarmEvent3.AlarmTemperatureExceeded3 = false
	}

	if payload[i]&0x80 == 0x80 {
		val.AlarmEvent3.AlarmStillActive3 = true
	} else {
		val.AlarmEvent3.AlarmStillActive3 = false
	}

	i += 1

	if payload[i]&0x02 == 0x02 {
		val.AlarmEvent4.ExternalAlarm4 = true
	} else {
		val.AlarmEvent4.ExternalAlarm4 = false
	}

	if payload[i]&0x04 == 0x04 {
		val.AlarmEvent4.SensorError4 = true
	} else {
		val.AlarmEvent4.SensorError4 = false
	}

	if payload[i]&0x08 == 0x08 {
		val.AlarmEvent4.AlarmTemperatureExceeded4 = true
	} else {
		val.AlarmEvent4.AlarmTemperatureExceeded4 = false
	}

	if payload[i]&0x80 == 0x80 {
		val.AlarmEvent4.AlarmStillActive4 = true
	} else {
		val.AlarmEvent4.AlarmStillActive4 = false
	}

	i += 1

	if payload[i]&0x02 == 0x02 {
		val.AlarmEvent5.ExternalAlarm5 = true
	} else {
		val.AlarmEvent5.ExternalAlarm5 = false
	}

	if payload[i]&0x04 == 0x04 {
		val.AlarmEvent5.SensorError5 = true
	} else {
		val.AlarmEvent5.SensorError5 = false
	}

	if payload[i]&0x08 == 0x08 {
		val.AlarmEvent5.AlarmTemperatureExceeded5 = true
	} else {
		val.AlarmEvent5.AlarmTemperatureExceeded5 = false
	}

	if payload[i]&0x80 == 0x80 {
		val.AlarmEvent5.AlarmStillActive5 = true
	} else {
		val.AlarmEvent5.AlarmStillActive5 = false
	}

	i += 1

	return val
}
