// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package chimneyfan

// <no value>

type ChimneyFanAlarmLogReport struct {
	ExternalAlarm1 bool

	SensorError1 bool

	AlarmTemperatureExceeded1 bool

	AlarmStillActive1 bool

	ExternalAlarm2 bool

	SensorError2 bool

	AlarmTemperatureExceeded2 bool

	AlarmStillActive2 bool

	ExternalAlarm3 bool

	SensorError3 bool

	AlarmTemperatureExceeded3 bool

	AlarmStillActive3 bool

	ExternalAlarm4 bool

	SensorError4 bool

	AlarmTemperatureExceeded4 bool

	AlarmStillActive4 bool

	ExternalAlarm5 bool

	SensorError5 bool

	AlarmTemperatureExceeded5 bool

	AlarmStillActive5 bool
}

func ParseChimneyFanAlarmLogReport(payload []byte) ChimneyFanAlarmLogReport {
	val := ChimneyFanAlarmLogReport{}

	i := 2

	if payload[i]&0x02 == 0x02 {
		val.ExternalAlarm1 = true
	} else {
		val.ExternalAlarm1 = false
	}

	if payload[i]&0x04 == 0x04 {
		val.SensorError1 = true
	} else {
		val.SensorError1 = false
	}

	if payload[i]&0x08 == 0x08 {
		val.AlarmTemperatureExceeded1 = true
	} else {
		val.AlarmTemperatureExceeded1 = false
	}

	if payload[i]&0x80 == 0x80 {
		val.AlarmStillActive1 = true
	} else {
		val.AlarmStillActive1 = false
	}

	i += 1

	if payload[i]&0x02 == 0x02 {
		val.ExternalAlarm2 = true
	} else {
		val.ExternalAlarm2 = false
	}

	if payload[i]&0x04 == 0x04 {
		val.SensorError2 = true
	} else {
		val.SensorError2 = false
	}

	if payload[i]&0x08 == 0x08 {
		val.AlarmTemperatureExceeded2 = true
	} else {
		val.AlarmTemperatureExceeded2 = false
	}

	if payload[i]&0x80 == 0x80 {
		val.AlarmStillActive2 = true
	} else {
		val.AlarmStillActive2 = false
	}

	i += 1

	if payload[i]&0x02 == 0x02 {
		val.ExternalAlarm3 = true
	} else {
		val.ExternalAlarm3 = false
	}

	if payload[i]&0x04 == 0x04 {
		val.SensorError3 = true
	} else {
		val.SensorError3 = false
	}

	if payload[i]&0x08 == 0x08 {
		val.AlarmTemperatureExceeded3 = true
	} else {
		val.AlarmTemperatureExceeded3 = false
	}

	if payload[i]&0x80 == 0x80 {
		val.AlarmStillActive3 = true
	} else {
		val.AlarmStillActive3 = false
	}

	i += 1

	if payload[i]&0x02 == 0x02 {
		val.ExternalAlarm4 = true
	} else {
		val.ExternalAlarm4 = false
	}

	if payload[i]&0x04 == 0x04 {
		val.SensorError4 = true
	} else {
		val.SensorError4 = false
	}

	if payload[i]&0x08 == 0x08 {
		val.AlarmTemperatureExceeded4 = true
	} else {
		val.AlarmTemperatureExceeded4 = false
	}

	if payload[i]&0x80 == 0x80 {
		val.AlarmStillActive4 = true
	} else {
		val.AlarmStillActive4 = false
	}

	i += 1

	if payload[i]&0x02 == 0x02 {
		val.ExternalAlarm5 = true
	} else {
		val.ExternalAlarm5 = false
	}

	if payload[i]&0x04 == 0x04 {
		val.SensorError5 = true
	} else {
		val.SensorError5 = false
	}

	if payload[i]&0x08 == 0x08 {
		val.AlarmTemperatureExceeded5 = true
	} else {
		val.AlarmTemperatureExceeded5 = false
	}

	if payload[i]&0x80 == 0x80 {
		val.AlarmStillActive5 = true
	} else {
		val.AlarmStillActive5 = false
	}

	i += 1

	return val
}
