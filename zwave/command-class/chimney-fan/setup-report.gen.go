// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package chimneyfan

import "errors"

// <no value>

type ChimneyFanSetupReport struct {
	Mode byte

	BoostTime byte

	StopTime byte

	MinSpeed byte

	Properties1 struct {
		Size1 byte

		Scale1 byte

		Precision1 byte
	}

	StartTemperature []byte

	Properties2 struct {
		Size2 byte

		Scale2 byte

		Precision2 byte
	}

	StopTemperature []byte

	Properties3 struct {
		Size3 byte

		Scale3 byte

		Precision3 byte
	}

	AlarmTemperatureValue []byte
}

func (cmd *ChimneyFanSetupReport) UnmarshalBinary(payload []byte) error {
	i := 2

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Mode = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.BoostTime = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.StopTime = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.MinSpeed = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Properties1.Size1 = (payload[i] & 0x07)

	cmd.Properties1.Scale1 = (payload[i] & 0x18) << 3

	cmd.Properties1.Precision1 = (payload[i] & 0xE0) << 5

	i += 1

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.StartTemperature = payload[i : i+4]
	i += 4

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Properties2.Size2 = (payload[i] & 0x07)

	cmd.Properties2.Scale2 = (payload[i] & 0x18) << 3

	cmd.Properties2.Precision2 = (payload[i] & 0xE0) << 5

	i += 1

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.StopTemperature = payload[i : i+6]
	i += 6

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Properties3.Size3 = (payload[i] & 0x07)

	cmd.Properties3.Scale3 = (payload[i] & 0x18) << 3

	cmd.Properties3.Precision3 = (payload[i] & 0xE0) << 5

	i += 1

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.AlarmTemperatureValue = payload[i : i+8]
	i += 8

	return nil
}
