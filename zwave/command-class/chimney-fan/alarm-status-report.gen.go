// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package chimneyfan

// <no value>

type ChimneyFanAlarmStatusReport struct {
	AlarmStatus struct {
		NotUsed byte

		Service bool

		ExternalAlarm bool

		SensorError bool

		AlarmTemperatureExceeded bool

		SpeedChangeEnable bool

		StartTemperatureExceeded bool
	}
}

func ParseChimneyFanAlarmStatusReport(payload []byte) ChimneyFanAlarmStatusReport {
	val := ChimneyFanAlarmStatusReport{}

	i := 2

	val.AlarmStatus.NotUsed = (payload[i] & 0x30) << 4

	if payload[i]&0x01 == 0x01 {
		val.AlarmStatus.Service = true
	} else {
		val.AlarmStatus.Service = false
	}

	if payload[i]&0x02 == 0x02 {
		val.AlarmStatus.ExternalAlarm = true
	} else {
		val.AlarmStatus.ExternalAlarm = false
	}

	if payload[i]&0x04 == 0x04 {
		val.AlarmStatus.SensorError = true
	} else {
		val.AlarmStatus.SensorError = false
	}

	if payload[i]&0x08 == 0x08 {
		val.AlarmStatus.AlarmTemperatureExceeded = true
	} else {
		val.AlarmStatus.AlarmTemperatureExceeded = false
	}

	if payload[i]&0x40 == 0x40 {
		val.AlarmStatus.SpeedChangeEnable = true
	} else {
		val.AlarmStatus.SpeedChangeEnable = false
	}

	if payload[i]&0x80 == 0x80 {
		val.AlarmStatus.StartTemperatureExceeded = true
	} else {
		val.AlarmStatus.StartTemperatureExceeded = false
	}

	i += 1

	return val
}
