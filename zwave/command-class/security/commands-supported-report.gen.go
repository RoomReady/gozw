// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package security

import "errors"

// <no value>

type SecurityCommandsSupportedReport struct {
	ReportsToFollow byte

	CommandClassSupport []byte

	CommandClassControl []byte
}

func (cmd *SecurityCommandsSupportedReport) UnmarshalBinary(payload []byte) error {
	i := 2

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.ReportsToFollow = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	{
		markerIndex := i
		for ; markerIndex < len(payload) && payload[markerIndex] != 0xEF; markerIndex++ {
		}
		val.CommandClassSupport = payload[i:markerIndex]
	}

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	i += 1 // skipping MARKER

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	val.CommandClassControl = payload[i:]

	return nil
}
