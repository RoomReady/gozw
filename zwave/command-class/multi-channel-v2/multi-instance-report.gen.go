// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package multichannelv2

import "errors"

// <no value>

type MultiInstanceReport struct {
	CommandClass byte

	Properties1 struct {
		Instances byte
	}
}

func (cmd *MultiInstanceReport) UnmarshalBinary(payload []byte) error {
	i := 0

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.CommandClass = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Properties1.Instances = (payload[i] & 0x7F)

	i += 1

	return nil
}

func (cmd *MultiInstanceReport) MarshalBinary() (payload []byte, err error) {

	payload = append(payload, cmd.CommandClass)

	{
		var val byte

		val |= (cmd.Properties1.Instances) & byte(0x7F)

		payload = append(payload, val)
	}

	return
}
