// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package timev2

import "errors"

// <no value>

type TimeOffsetReport struct {
	Level struct {
		HourTzo byte

		SignTzo bool
	}

	MinuteTzo byte

	Level2 struct {
		MinuteOffsetDst byte

		SignOffsetDst bool
	}

	MonthStartDst byte

	DayStartDst byte

	HourStartDst byte

	MonthEndDst byte

	DayEndDst byte

	HourEndDst byte
}

func (cmd *TimeOffsetReport) UnmarshalBinary(payload []byte) error {
	i := 2

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Level.HourTzo = (payload[i] & 0x7F)

	if payload[i]&0x80 == 0x80 {
		cmd.Level.SignTzo = true
	} else {
		cmd.Level.SignTzo = false
	}

	i += 1

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.MinuteTzo = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Level2.MinuteOffsetDst = (payload[i] & 0x7F)

	if payload[i]&0x80 == 0x80 {
		cmd.Level2.SignOffsetDst = true
	} else {
		cmd.Level2.SignOffsetDst = false
	}

	i += 1

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.MonthStartDst = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.DayStartDst = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.HourStartDst = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.MonthEndDst = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.DayEndDst = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.HourEndDst = payload[i]
	i++

	return nil
}
