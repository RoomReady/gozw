// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package thermostatmodev3

import "errors"

// <no value>

type ThermostatModeReport struct {
	Level struct {
		NoOfManufacturerDataFields byte

		Mode byte
	}

	ManufacturerData []byte
}

func (cmd *ThermostatModeReport) UnmarshalBinary(payload []byte) error {
	i := 0

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Level.NoOfManufacturerDataFields = (payload[i] & 0xE0) >> 5

	cmd.Level.Mode = (payload[i] & 0x1F)

	i += 1

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.ManufacturerData = payload[i : i+0]
	i += 0

	return nil
}

func (cmd *ThermostatModeReport) MarshalBinary() (payload []byte, err error) {

	{
		var val byte

		val |= (cmd.Level.NoOfManufacturerDataFields << byte(5)) & byte(0xE0)

		val |= (cmd.Level.Mode) & byte(0x1F)

		payload = append(payload, val)
	}

	if cmd.ManufacturerData != nil && len(cmd.ManufacturerData) > 0 {
		payload = append(payload, cmd.ManufacturerData...)
	}

	return
}
