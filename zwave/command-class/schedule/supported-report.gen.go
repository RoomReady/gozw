// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package schedule

import "errors"

// <no value>

type ScheduleSupportedReport struct {
	NumberOfSupportedScheduleId byte

	Properties1 struct {
		StartTimeSupport byte

		FallbackSupport bool

		SupportEnabledisable bool
	}

	NumberOfSupportedCc byte

	Properties3 struct {
		SupportedOverrideTypes byte

		OverrideSupport bool
	}
}

func (cmd *ScheduleSupportedReport) UnmarshalBinary(payload []byte) error {
	i := 2

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.NumberOfSupportedScheduleId = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Properties1.StartTimeSupport = (payload[i] & 0x3F)

	if payload[i]&0x40 == 0x40 {
		cmd.Properties1.FallbackSupport = true
	} else {
		cmd.Properties1.FallbackSupport = false
	}

	if payload[i]&0x80 == 0x80 {
		cmd.Properties1.SupportEnabledisable = true
	} else {
		cmd.Properties1.SupportEnabledisable = false
	}

	i += 1

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.NumberOfSupportedCc = payload[i]
	i++

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Properties3.SupportedOverrideTypes = (payload[i] & 0x7F)

	if payload[i]&0x80 == 0x80 {
		cmd.Properties3.OverrideSupport = true
	} else {
		cmd.Properties3.OverrideSupport = false
	}

	i += 1

	return nil
}
