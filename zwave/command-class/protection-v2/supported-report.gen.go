// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package protectionv2

import "encoding/binary"

// <no value>

type ProtectionSupportedReport struct {
	Timeout bool

	ExclusiveControl bool

	LocalProtectionState uint16

	RfProtectionState uint16
}

func ParseProtectionSupportedReport(payload []byte) ProtectionSupportedReport {
	val := ProtectionSupportedReport{}

	i := 2

	if payload[i]&0x01 == 0x01 {
		val.Timeout = true
	} else {
		val.Timeout = false
	}

	if payload[i]&0x02 == 0x02 {
		val.ExclusiveControl = true
	} else {
		val.ExclusiveControl = false
	}

	i += 1

	val.LocalProtectionState = binary.BigEndian.Uint16(payload[i : i+2])
	i += 2

	val.RfProtectionState = binary.BigEndian.Uint16(payload[i : i+2])
	i += 2

	return val
}
