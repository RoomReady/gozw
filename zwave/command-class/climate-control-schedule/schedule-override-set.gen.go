// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package climatecontrolschedule

import (
	"encoding/gob"
	"errors"
)

func init() {
	gob.Register(ScheduleOverrideSet{})
}

// <no value>
type ScheduleOverrideSet struct {
	Properties1 struct {
		OverrideType byte
	}

	OverrideState byte
}

func (cmd *ScheduleOverrideSet) UnmarshalBinary(data []byte) error {
	// According to the docs, we must copy data if we wish to retain it after returning
	payload := make([]byte, len(data))
	copy(payload, data)
	i := 0

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Properties1.OverrideType = (payload[i] & 0x03)

	i += 1

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.OverrideState = payload[i]
	i++

	return nil
}

func (cmd *ScheduleOverrideSet) MarshalBinary() (payload []byte, err error) {

	{
		var val byte

		val |= (cmd.Properties1.OverrideType) & byte(0x03)

		payload = append(payload, val)
	}

	payload = append(payload, cmd.OverrideState)

	return
}
