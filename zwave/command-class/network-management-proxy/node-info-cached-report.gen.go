// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package networkmanagementproxy

// <no value>

type NodeInfoCachedReport struct {
	SeqNo byte

	Properties1 struct {
		Age byte

		Status byte
	}

	Properties2 struct {
		Capability byte

		Listening bool
	}

	Properties3 struct {
		Security byte

		Sensor byte

		Opt bool
	}

	BasicDeviceClass byte

	GenericDeviceClass byte

	SpecificDeviceClass byte

	NonSecureCommandClass []byte

	SecurityScheme0CommandClass []byte
}

func ParseNodeInfoCachedReport(payload []byte) NodeInfoCachedReport {
	val := NodeInfoCachedReport{}

	i := 2

	val.SeqNo = payload[i]
	i++

	val.Properties1.Age = (payload[i] & 0x0F)

	val.Properties1.Status = (payload[i] & 0xF0) << 4

	i += 1

	val.Properties2.Capability = (payload[i] & 0x7F)

	if payload[i]&0x80 == 0x80 {
		val.Properties2.Listening = true
	} else {
		val.Properties2.Listening = false
	}

	i += 1

	val.Properties3.Security = (payload[i] & 0x0F)

	val.Properties3.Sensor = (payload[i] & 0x70) << 4

	if payload[i]&0x80 == 0x80 {
		val.Properties3.Opt = true
	} else {
		val.Properties3.Opt = false
	}

	i += 1

	val.BasicDeviceClass = payload[i]
	i++

	val.GenericDeviceClass = payload[i]
	i++

	val.SpecificDeviceClass = payload[i]
	i++

	{
		markerIndex := i
		for ; markerIndex < len(payload) && payload[markerIndex] != 0xF1; markerIndex++ {
		}
		val.NonSecureCommandClass = payload[i:markerIndex]
	}

	i += 1 // skipping MARKER

	val.SecurityScheme0CommandClass = payload[i:]

	return val
}
