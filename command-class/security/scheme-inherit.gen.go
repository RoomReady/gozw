// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package security

import (
	"encoding/gob"
	"errors"

	"github.com/helioslabs/gozw/command-class"
)

const CommandSchemeInherit commandclass.CommandID = 0x08

func init() {
	gob.Register(SchemeInherit{})
	commandclass.Register(commandclass.CommandIdentifier{
		CommandClass: commandclass.CommandClassID(0x98),
		Command:      commandclass.CommandID(0x08),
		Version:      1,
	}, NewSchemeInherit)
}

func NewSchemeInherit() commandclass.Command {
	return &SchemeInherit{}
}

// <no value>
type SchemeInherit struct {
	SupportedSecuritySchemes byte
}

func (cmd SchemeInherit) CommandClassID() commandclass.CommandClassID {
	return 0x98
}

func (cmd SchemeInherit) CommandID() commandclass.CommandID {
	return CommandSchemeInherit
}

func (cmd SchemeInherit) CommandIDString() string {
	return "SECURITY_SCHEME_INHERIT"
}

func (cmd *SchemeInherit) UnmarshalBinary(data []byte) error {
	// According to the docs, we must copy data if we wish to retain it after returning

	payload := make([]byte, len(data))
	copy(payload, data)

	if len(payload) < 2 {
		return errors.New("Payload length underflow")
	}

	i := 2

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.SupportedSecuritySchemes = payload[i]
	i++

	return nil
}

func (cmd *SchemeInherit) MarshalBinary() (payload []byte, err error) {
	payload = make([]byte, 2)
	payload[0] = byte(cmd.CommandClassID())
	payload[1] = byte(cmd.CommandID())

	payload = append(payload, cmd.SupportedSecuritySchemes)

	return
}
