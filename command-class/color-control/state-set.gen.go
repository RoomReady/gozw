// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package colorcontrol

import (
	"encoding/gob"
	"errors"

	"github.com/helioslabs/gozw/command-class"
)

const CommandStateSet commandclass.CommandID = 0x05

func init() {
	gob.Register(StateSet{})
	commandclass.Register(commandclass.CommandIdentifier{
		CommandClass: commandclass.CommandClassID(0x33),
		Command:      commandclass.CommandID(0x05),
		Version:      1,
	}, NewStateSet)
}

func NewStateSet() commandclass.Command {
	return &StateSet{}
}

// <no value>
type StateSet struct {
	Properties1 struct {
		StateDataLength byte
	}
}

func (cmd StateSet) CommandClassID() commandclass.CommandClassID {
	return 0x33
}

func (cmd StateSet) CommandID() commandclass.CommandID {
	return CommandStateSet
}

func (cmd StateSet) CommandIDString() string {
	return "STATE_SET"
}

func (cmd *StateSet) UnmarshalBinary(data []byte) error {
	// According to the docs, we must copy data if we wish to retain it after returning

	payload := make([]byte, len(data))
	copy(payload, data)

	if len(payload) < 2 {
		return errors.New("Payload length underflow")
	}

	i := 2

	if len(payload) <= i {
		return errors.New("slice index out of bounds")
	}

	cmd.Properties1.StateDataLength = (payload[i] & 0x1F)

	i += 1

	return nil
}

func (cmd *StateSet) MarshalBinary() (payload []byte, err error) {
	payload = make([]byte, 2)
	payload[0] = byte(cmd.CommandClassID())
	payload[1] = byte(cmd.CommandID())

	{
		var val byte

		val |= (cmd.Properties1.StateDataLength) & byte(0x1F)

		payload = append(payload, val)
	}

	return
}
