// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package {{.CommandClass.GetPackageName}}

{{$version := .CommandClass.Version}}
{{$structName := (.Command.GetStructName .CommandClass)}}

const Command{{$structName}} commandclass.CommandID = {{.Command.Key}}

func init() {
  gob.Register({{$structName}}{})
  commandclass.Register(commandclass.CommandIdentifier{
    CommandClass: commandclass.CommandClassID({{.CommandClass.Key}}),
    Command: commandclass.CommandID({{.Command.Key}}),
    Version: {{$version}},
  }, New{{$structName}})
}

func New{{$structName}}() commandclass.Command {
  return &{{$structName}}{}
}

// {{.Help}}
type {{$structName}} struct {
  {{range $_, $param := .Command.Params}}
    {{template "command-struct-fields" $param}}
  {{end}}
}

func (cmd {{$structName}}) CommandClassID() commandclass.CommandClassID {
  return {{.CommandClass.Key}}
}

func (cmd {{$structName}}) CommandID() commandclass.CommandID {
  return Command{{$structName}}
}

func (cmd {{$structName}}) CommandIDString() string {
  return "{{.Command.Name}}"
}

func (cmd *{{$structName}}) UnmarshalBinary(data []byte) error {
  // According to the docs, we must copy data if we wish to retain it after returning
  {{if .Command.Params}}
  payload := make([]byte, len(data))
  copy(payload, data)

  if len(payload) < 2 {
    return errors.New("Payload length underflow")
  }

  {{template "unmarshal-command-params" .Command.Params}}

  {{end}}
  return nil
}

func (cmd *{{$structName}}) MarshalBinary() (payload []byte, err error) {
  payload = make([]byte, 2)
  payload[0] = byte(cmd.CommandClassID())
  payload[1] = byte(cmd.CommandID())
  {{template "marshal-command-params" .Command.Params}}
  return
}
