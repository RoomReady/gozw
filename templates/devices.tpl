// THIS FILE IS AUTO-GENERATED BY CCGEN
// DO NOT MODIFY

package commandclass

import "fmt"

type BasicDeviceType byte

func (b BasicDeviceType) String() string {
  if val, ok := BasicDeviceTypeNames[b]; ok {
		return val + fmt.Sprintf(" (0x%X)", byte(b))
	} else {
		return "Unknown" + fmt.Sprintf(" (0x%X)", byte(b))
	}
}

type GenericDeviceType byte

func (g GenericDeviceType) String() string {
	if val, ok := GenericDeviceTypeNames[g]; ok {
		return val + fmt.Sprintf(" (0x%X)", byte(g))
	} else {
		return "Unknown" + fmt.Sprintf(" (0x%X)", byte(g))
	}
}

type SpecificDeviceType byte

type DeviceType struct {
  BasicType BasicDeviceType
  GenericType GenericDeviceType
  SpecificType SpecificDeviceType
}

func getSpecificDeviceTypeName(genericType GenericDeviceType, specificType SpecificDeviceType) string {
	if val, ok := SpecificDeviceTypeNames[genericType][specificType]; ok {
		return val + fmt.Sprintf(" (0x%X)", byte(specificType))
	} else {
		return "Unknown" + fmt.Sprintf(" (0x%X)", byte(specificType))
	}
}

func (d DeviceType) String() string {
  return fmt.Sprintf("%s / %s / %s", d.BasicType, d.GenericType, d.SpecificDeviceTypeString())
}

func (d DeviceType) SpecificDeviceTypeString() string {
  return getSpecificDeviceTypeName(d.GenericType, d.SpecificType)
}

const (
  {{range .BasicDevices}}
  {{ToGoName .Name}} BasicDeviceType = {{.Key}}{{end}}
)

var BasicDeviceTypeNames map[BasicDeviceType]string = map[BasicDeviceType]string{
  {{range .BasicDevices}}
  {{ToGoName .Name}}: "{{.Help}}",{{end}}
}

const (
  {{range .GenericDevices}}
  {{ToGoName .Name}} GenericDeviceType = {{.Key}}{{end}}
)

var GenericDeviceTypeNames map[GenericDeviceType]string = map[GenericDeviceType]string{
  {{range .GenericDevices}}
  {{ToGoName .Name}}: "{{.Help}}",{{end}}
}

const (
  SpecificTypeNotUsed SpecificDeviceType = 0x00
  {{range .GenericDevices}}{{range .SpecificDevices}}{{if NotZeroByte .Key}}
  {{ToGoName .Name}} SpecificDeviceType = {{.Key}}{{end}}{{end}}{{end}}
)

var SpecificDeviceTypeNames map[GenericDeviceType]map[SpecificDeviceType]string = map[GenericDeviceType]map[SpecificDeviceType]string{
  {{range .GenericDevices}}{{ToGoName .Name}}: map[SpecificDeviceType]string{
    {{range .SpecificDevices}}{{ToGoName .Name}}: "{{.Help}}",
    {{end}}
  },
  {{end}}
}
